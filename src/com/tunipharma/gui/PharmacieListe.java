/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tunipharma.gui;
//import asmamap.ClassMap;
import com.tunipharma.map.ClassMap;
import com.tunipharma.dao.GardeDAO;
import com.tunipharma.dao.PharmacieDAO;
import com.tunipharma.dao.UtilDAO;
import com.tunipharma.entities.Pharmacie;
import java.awt.Color;
import java.awt.Component;
import java.util.Enumeration;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author KINGMOEZHAJ
 */
public class PharmacieListe extends javax.swing.JPanel {

    /**
     * Creates new form PharmacieListe
     */
    private List<Pharmacie> pharmacies;
    private GardeDAO gardeDAO = new GardeDAO();
    private UtilDAO utilDAO = new UtilDAO();
    public class MyTableCellRenderer extends DefaultTableCellRenderer implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setBackground(null);
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            setText(String.valueOf(value));
            Pharmacie pharmacie = pharmacies.get(row);
            if (pharmacie.getType().equals("Pharmacie de Jour") && gardeDAO.pharmacieEnGarde(pharmacie, new Date())) {
                setBackground(Color.GREEN);
            }else if(pharmacie.getType().equals("Pharmacie de Jour")){
                setBackground(Color.yellow);
            }else{
                setBackground(Color.blue);
            }
            return this;
        }

    }

    public PharmacieListe(List<Pharmacie> pharmacies) {
        this.pharmacies = pharmacies;
        initComponents();
        intialiseJTable();
    }

    private void intialiseJTable() {
        DefaultTableModel model = (DefaultTableModel) tablePharmacies.getModel();
        for (int i = 0; i < pharmacies.size(); i++) {
            Pharmacie pharmacie = pharmacies.get(i);
            model.addRow(new Object[]{pharmacie.getId(),pharmacie.getName(), pharmacie.getAdresse(), utilDAO.getGouvernorats(pharmacie.getCodePostal()), utilDAO.getDelegation(pharmacie.getCodePostal())});
        }
        tablePharmacies.setModel(model);
        Enumeration<TableColumn> en = tablePharmacies.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new MyTableCellRenderer());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePharmacies = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(519, 542));
        setMinimumSize(new java.awt.Dimension(519, 542));
        setPreferredSize(new java.awt.Dimension(519, 542));

        tablePharmacies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Adresse", "Gouvernorat", "Delegation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePharmacies.getTableHeader().setReorderingAllowed(false);
        tablePharmacies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePharmaciesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePharmacies);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablePharmaciesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePharmaciesMouseClicked
        if (evt.getClickCount() == 2) {
         DefaultTableModel model = (DefaultTableModel) tablePharmacies.getModel();
         int id = (int) model.getValueAt(tablePharmacies.getSelectedRow(), 0);
            try {
                ClassMap map= new ClassMap(id);
           } catch (ClassNotFoundException ex) {
                Logger.getLogger(PharmacieListe.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PharmacieListe.class.getName()).log(Level.SEVERE, null, ex);
            }
            
         
//            new ConsulterPharmacieClient(new PharmacieDAO().findPhamacieById(id)).setVisible(true);
        }
    }//GEN-LAST:event_tablePharmaciesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePharmacies;
    // End of variables declaration//GEN-END:variables
}
